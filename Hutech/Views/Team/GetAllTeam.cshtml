@{
    Layout = !Context.Request.Headers["X-Requested-With"].ToString().Equals("XMLHttpRequest", StringComparison.OrdinalIgnoreCase) ? "_Layout" : null;
}
@model Hutech.Models.TeamsViewModel
<div id="content">
    <div class="container-fluid">
        <div class="animated fadeIn">
            <div class="row">
                <div class="col-lg-12">

                    <div class="card">
                        <div class="card-header">
                            <i class="fa fa-align-justify"></i> Team
                            <a href="/Team/AddTeam">Add Team</a>
                        </div>
                        <div class="card-body">
                            <table class="table table-responsive-sm">
                                <thead>
                                    <tr>
                                        <th>Team Name</th>
                                        <th>Location Name</th>
                                        <th>Updated By/Role</th>
                                        <th>Updated On</th>
                                        <th>Status</th>
                                        <th>Action</th>
                                        @*<th>Delete</th>*@
                                    </tr>
                                </thead>
                                @{
                                    int recordsPerPage = 10;
                                    int pageNumber = Model.CurrentPage;
                                    int pageSize = pageNumber + 4;
                                    int rowNo = ((pageNumber - 1) * recordsPerPage);
                                }
                                <tbody>
                                    <tr>
                                        <td>
                                            @Html.TextBoxFor(x => x.TeamName, new { @class = "form-control", @placeholder = "Search", @onKeyUp = "Filter()", @value = @ViewBag.TeamName != null ? @ViewBag.TeamName : "" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(x => x.LocationName, new { @class = "form-control", @placeholder = "Search", @onKeyUp = "Filter()", @value = @ViewBag.TeamName != null ? @ViewBag.TeamName : "" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(x => x.UpdatedBy, new { @class = "form-control", @placeholder = "Search", @onKeyUp = "Filter()", @value = @ViewBag.UpdatedBy != null ? @ViewBag.UpdatedBy : "" })
                                        </td>
                                        <td>
                                            <input asp-for="@Model.UpdatedDate" class="form-control" onchange="Filter()" />
                                        </td>
                                        <td>
                                            @Html.DropDownListFor(x => x.SelectedStatus, Model.Status, new { @class = "form-control processbank", @onchange = "Filter()" })
                                        </td>
                                    </tr>
                                    @for (int i = 0; i < Model.teamViewModels.Count; i++)
                                    {
                                        <tr>
                                            <td>@Model.teamViewModels[i].Name</td>
                                            <td>@Model.teamViewModels[i].LocationName</td>
                                            <td>@Model.teamViewModels[i].fullname (@Model.teamViewModels[i].Role)</td>
                                            <td>@Model.teamViewModels[i].DateModifiedUtc.ToString("dd MMM yyyy HH:mm")</td>
                                            @if (Model.teamViewModels[i].IsActive)
                                            {
                                                <td>Active</td>
                                            }
                                            else
                                            {
                                                <td>InActive</td>
                                            }
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <button class="btn btn-secondary dropdown-toggle" id="btnGroupDrop1" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Action</button>
                                                    <div class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                                                        <a class="dropdown-item" href="/Team/EditTeam?id=@Model.teamViewModels[i].Id">Edit</a>
                                                        <a class="dropdown-item" href="/Team/DeleteTeam?id=@Model.teamViewModels[i].Id" onclick="return confirm('Are you sure want to delete?')">Deactivate</a>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }

                                </tbody>
                            </table>
                            @if (Model.TotalPages > 1)
                            {
                                string formattedDate = string.Empty;
                                @if (Model.UpdatedDate != null)
                                {
                                    formattedDate = Model.UpdatedDate.Value.ToString("yyyy-MM-dd");
                                }
                                <nav>
                                    <ul class="pagination">
                                        @if (pageNumber > 1)
                                        {
                                            int prevPage = pageNumber - 1;
                                            <li class="page-item">
                                                <a class="page-link" href="/Team/GetAllTeam?pageNumber=@prevPage&teamName=@Model.TeamName&updatedBy=@Model.UpdatedBy&updatedDate=@formattedDate&SelectedStatus=@Model.SelectedStatus">Prev</a>
                                            </li>
                                        }
                                        @for (int i = pageNumber; i <= Model.TotalPages && i <= pageSize; i++)
                                        {
                                            if (i == pageNumber)
                                            {
                                                <li class="page-item active">
                                                    <a class="page-link" href="/Team/GetAllTeam?pageNumber=@i&teamName=@Model.TeamName&updatedBy=@Model.UpdatedBy&updatedDate=@formattedDate&SelectedStatus=@Model.SelectedStatus">@i</a>
                                                </li>
                                            }
                                            else
                                            {
                                                <li class="page-item">
                                                    <a class="page-link" href="/Team/GetAllTeam?pageNumber=@i&teamName=@Model.TeamName&updatedBy=@Model.UpdatedBy&updatedDate=@formattedDate&SelectedStatus=@Model.SelectedStatus">@i</a>
                                                </li>
                                            }
                                        }
                                        @if (pageNumber < Model.TotalPages)
                                        {
                                            int nextPage = pageNumber + 1;
                                            <li class="page-item">
                                                <a class="page-link" href="/Team/GetAllTeam?pageNumber=@nextPage&teamName=@Model.TeamName&updatedBy=@Model.UpdatedBy&updatedDate=@formattedDate&SelectedStatus=@Model.SelectedStatus">Next</a>
                                            </li>
                                        }
                                    </ul>
                                </nav>
                            }
                        </div>
                    </div>
                </div>
                <!-- /.col-->

            </div>
            <!-- /.row-->
        </div>
    </div>
</div>
    @if (TempData["message"] != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                alert("@TempData["message"]");
                var url = "@TempData["RedirectURl"]";
                window.location.href = url;
            };
        </script>
    }
<script type="text/javascript">
    $(document).ready(function () {
        var value = '@ViewBag.updatedDate';
    })
    function Filter() {
        let teamName = $("#TeamName").val();
        let locationName = $("#LocationName").val();
        let updatebyOrRole = $("#UpdatedBy").val();
        var selectElement = document.getElementById("SelectedStatus");
        var selectedValue = selectElement.value;
        let status = selectedValue;
        let date = $("#UpdatedDate").val();
        if (teamName == "" && teamName.length == 0)
            teamName = null;
        if (updatebyOrRole == "" && updatebyOrRole.length == 0)
            updatebyOrRole = null;
        if (locationName == "" && locationName.length == 0)
            locationName = null;
        if (date == "")
            date = null;
        var model = {
            teamName: teamName,
            updatedBy: updatebyOrRole,
            status: status,
            updatedDate: date,
            locationName:locationName
        };
        $.ajax({
            url: '/Team/GetAllTeam',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(model),
            success: function (response) {
                // Handle successful response from the server
                var div = document.getElementById("content");
                div.innerHTML = response;
            },
            error: function (xhr, status, error) {
                // Handle error response from the server
                console.error(xhr.responseText);
            }
        });
    }
</script>
@{
    Layout = !Context.Request.Headers["X-Requested-With"].ToString().Equals("XMLHttpRequest", StringComparison.OrdinalIgnoreCase) ? "_Layout" : null;
}
@model Hutech.Models.InstrumentActivitiesViewModel
<div id="content">
    <div class="container-fluid">
        <div class="animated fadeIn">
            <div class="row">
                <div class="col-lg-12">

                    <div class="card">
                        <div class="card-header">
                            <i class="fa fa-align-justify"></i>@_localizer.Getkey("Instrument Activity")
                            <a href="/InstrumentActivity/AddInstrumentActivity">@_localizer.Getkey("Add Instrument Activity")</a>
                        </div>
                        <div class="card-body">
                            <table class="table table-responsive-sm">
                                <thead>
                                    <tr>
                                        <th>@_localizer.Getkey("Instrument ActivityId")</th>
                                        <th>@_localizer.Getkey("Instrument Name")</th>
                                        <th>@_localizer.Getkey("Activity Name")</th>
                                        @*  <th>InstrumentActivity Name</th> *@
                                        @*  <th>Frequnecy Unit</th>
                                        <th>Frequency Time</th> *@
                                        <th>@_localizer.Getkey("Requirement")</th>
                                        <th>@_localizer.Getkey("Department")</th>
                                        <th>@_localizer.Getkey("Updated By/ Role")</th>
                                        <th>@_localizer.Getkey("Updated On")</th>
                                        @* <th>Before Alert Time</th>
                                        <th>Before Alerts</th>
                                        <th>Days</th> *@
                                        <th>@_localizer.Getkey("Status")</th>
                                        <th>@_localizer.Getkey("Action")</th>
                                        @*<th>Delete</th>*@
                                    </tr>
                                </thead>
                                @{
                                    int recordsPerPage = 10;
                                    int pageNumber = Model.CurrentPage;
                                    int pageSize = pageNumber + 4;
                                    int rowNo = ((pageNumber - 1) * recordsPerPage);
                                }
                                <tbody>
                                    <tr>
                                        <td>
                                            @Html.TextBoxFor(x => x.InstrumentActivityId, new { @class = "form-control", @placeholder =@_localizer.Getkey("Search"), @onKeyUp = "Filter()", @value = @ViewBag.InstrumentActivityId != null ? @ViewBag.InstrumentActivityId : "" })
                                        </td>

                                        <td>
                                            @Html.TextBoxFor(x => x.InstrumentName, new { @class = "form-control", @placeholder = @_localizer.Getkey("Search"), @onKeyUp = "Filter()", @value = @ViewBag.InstrumentName != null ? @ViewBag.InstrumentName : "" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(x => x.ActivityName, new { @class = "form-control", @placeholder =@_localizer.Getkey("Search"), @onKeyUp = "Filter()", @value = @ViewBag.ActivityName != null ? @ViewBag.ActivityName : "" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(x => x.RequirementName, new { @class = "form-control", @placeholder =@_localizer.Getkey("Search"), @onKeyUp = "Filter()", @value = @ViewBag.RequirementName != null ? @ViewBag.RequirementName : "" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(x => x.DepartmentName, new { @class = "form-control", @placeholder = @_localizer.Getkey("Search"), @onKeyUp = "Filter()", @value = @ViewBag.DepartmentName != null ? @ViewBag.DepartmentName : "" })
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(x => x.UpdatedBy, new { @class = "form-control", @placeholder = @_localizer.Getkey("Search"), @onKeyUp = "Filter()", @value = @ViewBag.UpdatedBy != null ? @ViewBag.UpdatedBy : "" })
                                        </td>
                                        <td>
                                            <input asp-for="@Model.UpdatedDate" class="form-control" onchange="Filter()" />
                                        </td>
                                        <td>
                                            @Html.DropDownListFor(x => x.SelectedStatus, Model.Status, new { @class = "form-control processbank", @onchange = "Filter()" })
                                        </td>
                                    </tr>
                                    @for (int i = 0; i < Model.instrumentActivityViewModels.Count; i++)
                                    {
                                        <tr>
                                            <td>@Model.instrumentActivityViewModels[i].InstrumentActivityId</td>
                                            <td>@Model.instrumentActivityViewModels[i].InstrumentName</td>
                                            <td>@Model.instrumentActivityViewModels[i].activityName</td>
                                            @* <td>@Model.instrumentActivityViewModels[i].InstrumentActivityName</td> *@
                                            @*  <td>@Model.instrumentActivityViewModels[i].Frequency</td>
                                        <td>@Model.instrumentActivityViewModels[i].FrequencyTime</td> *@
                                            <td>@Model.instrumentActivityViewModels[i].RequirementName</td>
                                            <td>@Model.instrumentActivityViewModels[i].DepartmentName</td>
                                            <td>@Model.instrumentActivityViewModels[i].fullname (@Model.instrumentActivityViewModels[i].Role)</td>

                                            @if (Model.instrumentActivityViewModels[i].ModifiedDateTime != null)
                                            {
                                                <td>@Model.instrumentActivityViewModels[i].ModifiedDateTime.ToString("dd MMM yyyy HH:mm")</td>
                                            }
                                            else
                                            {
                                                <td>@Model.instrumentActivityViewModels[i].CreatedDateTime.ToString("dd MMM yyyy HH:mm")</td>
                                            }
                                            @* <td>@Model.instrumentActivityViewModels[i].BeforeAlertsTime</td>
                                        <td>@Model.instrumentActivityViewModels[i].BeforeAlerts</td>
                                        <td>@Model.instrumentActivityViewModels[i].Days</td> *@
                                            @if (Model.instrumentActivityViewModels[i].IsActive)
                                            {
                                                <td>@_localizer.Getkey("Active")</td>
                                            }
                                            else
                                            {
                                                <td>@_localizer.Getkey("InActive")</td>
                                            }
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <button class="btn btn-secondary dropdown-toggle" id="btnGroupDrop1" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">@_localizer.Getkey("Action")</button>
                                                    <div class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                                                        <a class="dropdown-item" href="/InstrumentActivity/EditInstrumentActivity?id=@Model.instrumentActivityViewModels[i].Id">@_localizer.Getkey("Edit")</a>
                                                        <a class="dropdown-item" href="/InstrumentActivity/DeleteInstrumentActivity?id=@Model.instrumentActivityViewModels[i].Id" onclick="return confirm('Are you sure want to delete?')">@_localizer.Getkey("Deactivate")</a>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }

                                </tbody>
                            </table>
                            @if (Model.TotalPages > 1)
                            {
                                string formattedDate = string.Empty;
                                @if (Model.UpdatedDate != null)
                                {
                                    formattedDate = Model.UpdatedDate.Value.ToString("yyyy-MM-dd");
                                }
                                <nav>
                                    <ul class="pagination">
                                        @if (pageNumber > 1)
                                        {
                                            int prevPage = pageNumber - 1;
                                            <li class="page-item">
                                                <a class="page-link" href="/InstrumentActivity/GetAllInstrumentActivity?pageNumber=@prevPage&instrumentActivityId=@Model.InstrumentActivityId&activityName=@Model.ActivityName&instrumentName=@Model.InstrumentName&requirementName=@Model.RequirementName&departmentName=@Model.DepartmentName&updatedBy=@Model.UpdatedBy&updatedDate=@formattedDate&SelectedStatus=@Model.SelectedStatus">@_localizer.Getkey("Prev")</a>
                                            </li>
                                        }
                                        @for (int i = pageNumber; i <= Model.TotalPages && i <= pageSize; i++)
                                        {
                                            if (i == pageNumber)
                                            {
                                                <li class="page-item active">
                                                    <a class="page-link" href="/InstrumentActivity/GetAllInstrumentActivity?pageNumber=@i&instrumentActivityId=@Model.InstrumentActivityId&activityName=@Model.ActivityName&instrumentName=@Model.InstrumentName&requirementName=@Model.RequirementName&departmentName=@Model.DepartmentName&updatedBy=@Model.UpdatedBy&updatedDate=@formattedDate&SelectedStatus=@Model.SelectedStatus">@i</a>
                                                </li>
                                            }
                                            else
                                            {
                                                <li class="page-item">
                                                    <a class="page-link" href="/InstrumentActivity/GetAllInstrumentActivity?pageNumber=@i&instrumentActivityId=@Model.InstrumentActivityId&activityName=@Model.ActivityName&instrumentName=@Model.InstrumentName&requirementName=@Model.RequirementName&departmentName=@Model.DepartmentName&updatedBy=@Model.UpdatedBy&updatedDate=@formattedDate&SelectedStatus=@Model.SelectedStatus">@i</a>
                                                </li>
                                            }
                                        }
                                        @if (pageNumber < Model.TotalPages)
                                        {
                                            int nextPage = pageNumber + 1;
                                            <li class="page-item">
                                                <a class="page-link" href="/InstrumentActivity/GetAllInstrumentActivity?pageNumber=@nextPage&instrumentActivityId=@Model.InstrumentActivityId&activityName=@Model.ActivityName&instrumentName=@Model.InstrumentName&requirementName=@Model.RequirementName&departmentName=@Model.DepartmentName&updatedBy=@Model.UpdatedBy&updatedDate=@formattedDate&SelectedStatus=@Model.SelectedStatus">@_localizer.Getkey("Next")</a>
                                            </li>
                                        }
                                    </ul>
                                </nav>
                            }
                        </div>
                    </div>
                </div>
                <!-- /.col-->

            </div>
            <!-- /.row-->
        </div>
    </div>
</div>
@if (TempData["message"] != null)
{
    <script type="text/javascript">
        window.onload = function () {
            alert("@TempData["message"]");
            var url = "@TempData["RedirectURl"]";
            window.location.href = url;
        };
    </script>
}
<script type="text/javascript">
    $(document).ready(function () {
        var value = '@ViewBag.updatedDate';
    })
    function Filter() {
        let instrumentActivityId = $("#InstrumentActivityId").val();
        let activityName = $("#ActivityName").val();
        let instrumentName = $("#InstrumentName").val();
        let requirementName = $("#RequirementName").val();
        let departmentName = $("#DepartmentName").val();
        let updatebyOrRole = $("#UpdatedBy").val();
        var selectElement = document.getElementById("SelectedStatus");
        var selectedValue = selectElement.value;
        let status = selectedValue;
        let date = $("#UpdatedDate").val();
        if (instrumentActivityId == "" && instrumentActivityId.length == 0)
            instrumentActivityId = null;
        if (activityName == "" && activityName.length == 0)
            activityName = null;
        if (instrumentName == "" && instrumentName.length == 0)
            instrumentName = null;
        if (requirementName == "" && requirementName.length == 0)
            requirementName = null;
        if (departmentName == "" && departmentName.length == 0)
            departmentName = null;
        if (updatebyOrRole == "" && updatebyOrRole.length == 0)
            updatebyOrRole = null;
        if (date == "")
            date = null;
        var model = {
            instrumentActivityId: instrumentActivityId,
            activityName: activityName,
            instrumentName: instrumentName,
            requirementName: requirementName,
            departmentName: departmentName,
            updatedBy: updatebyOrRole,
            status: status,
            updatedDate: date
        };
        $.ajax({
            url: '/InstrumentActivity/GetAllInstrumentActivity',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(model),
            success: function (response) {
                // Handle successful response from the server
                var div = document.getElementById("content");
                div.innerHTML = response;
            },
            error: function (xhr, status, error) {
                // Handle error response from the server
                console.error(xhr.responseText);
            }
        });
    }
</script>

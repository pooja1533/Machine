@model Hutech.Models.UserViewModel;
@* <form class="horizontal" method="post" asp-controller="ActivityDetails" asp-action="AddActivityDetails"> *@
@using (Html.BeginForm("AddUser", "User", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "validateForm(event)" }))
{
    @Html.AntiForgeryToken()
    <div class="col-sm-12">
        <div class="card">
            <div class="card-header">
                <strong>Add User</strong>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="company">User Type*</label>
                            @Html.DropDownListFor(x => x.UserTypeId, Model.UserTypesId, "Please select User Type", new { @class = "form-control processbank", onchange = "changeUserType()", @Id = "UserTypeId", @name = "UserTypeId" })
                            @Html.ValidationMessageFor(x => x.UserTypeId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4" style="display:none;" id="windowsUserName">
                        @* <div class="form-group">
                    <label for="company">Windows User Name</label>
                    @Html.DropDownListFor(x => x.WindowsUserName, Model.WindowsUserNamesId, "Please select Windows UserName", new { @class = "form-control processbank"})
                    @Html.ValidationMessageFor(x => x.UserTypeId, "", new { @class = "text-danger" })
                    </div> *@
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="col-md-9" style="float:left">
                                    <label for="company">Windows User Name*</label>
                                    @Html.TextBoxFor(x => x.WindowsUserName, new { Placeholder = "Enter Window User Name", @class = "form-control", @readonly = "true" })
                                    @Html.ValidationMessageFor(x => x.WindowsUserName, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3" style="float:right">
                                    <label></label>
                                    <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">Search</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="company">First Name*</label>
                            @Html.TextBoxFor(x => x.FirstName, new { Placeholder = "Enter First Name", @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="company">Last Name*</label>
                            @Html.TextBoxFor(x => x.LastName, new { Placeholder = "Enter Last Name", @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="company">EmployeeId*</label>
                            @Html.TextBoxFor(x => x.EmployeeId, new { Placeholder = "Enter Employee Id", @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.EmployeeId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="company">Email Id*</label>
                            @Html.TextBoxFor(x => x.Email, new { Placeholder = "Enter Email Id", @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="company">Location*</label>
                            @Html.DropDownListFor(x => x.LocationId, Model.LocationsId, "Please select Location", new { @class = "form-control processbank" })
                            @Html.ValidationMessageFor(x => x.LocationId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="company">Department*</label>
                            @Html.DropDownListFor(x => x.DepartmentId, Model.DepartmentsId, "Please select Department", new { @class = "form-control processbank" })
                            @Html.ValidationMessageFor(x => x.DepartmentId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="company">Role*</label>
                            @Html.ListBoxFor(model => model.SelectedUserRoleId, new MultiSelectList(Model.UserRolesId, "Value", "Text"), new { @class = "form-control", multiple = "multiple", id = "role" })
                            @Html.ValidationMessageFor(x => x.SelectedUserRoleId, "", new { @class = "text-danger" }) 
                            @*  @Html.DropDownListFor(x => x.UserRoleId, Model.UserRolesId, "Please select User Role", new { @class = "form-control processbank" })
                            @Html.ValidationMessageFor(x => x.UserRoleId, "", new { @class = "text-danger" }) *@
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="company">Remark</label>
                            @Html.TextBoxFor(x => x.Remark, new { Placeholder = "Enter Remark", @class = "form-control" })
                        </div>
                    </div>
                </div><div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="company">Login Validity In Days</label>
                            @Html.TextBoxFor(x => x.LoginValidityDays, new { Placeholder = "Enter Login Validity", @class = "form-control" })
                        </div>
                    </div>
                </div>
                @Html.HiddenFor(x => x.UserType)
                <div class="form-actions">
                    <input class="btn btn-primary" type="submit" value="Save changes">
                    <button class="btn btn-secondary" type="button" onclick="window.history.back()">Cancel</button>
                </div>
            </div>
        </div>
    </div>
}
<!-- Modal -->
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
           @*  <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Users</h4>
            </div> *@
            <div class="modal-header">
                <h4 class="modal-title">Users</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body" id="userId">
                <table id="item">
                    <tr>
                        <td>Name</td>
                        <td>Action</td>
                    </tr>
                    @foreach (var item in Model.WindowsUserNamesId)
                    {
                        <tr>
                            <td>
                                    @item.Text
                            </td>
                            @if (Model.WindowsUserName == item.Text)
                            {
                                <td>
                                    <input type="checkbox" value=@item.Text checked="checked"/>
                                </td>
                            }
                            else
                            {
                                <td>
                                    <input type="checkbox" value=@item.Text />
                                </td>
                            }
                        </tr>
                    }
            </table>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>

</div>
</div>
@section Scripts {
    <script>
        $(document).ready(function () {
            $('#role').multiselect();
            var selectedUserType = $("#UserTypeId option:selected").text();
            if (selectedUserType == "clintha") {
                $("#windowsUserName").show();
                $("#UserType").val("clintha");
            }
            else {
                $("#windowsUserName").hide();
                $("#UserType").val('');

            }
        });
    </script>
}
@if (TempData["message"] != null)
{
    <script type="text/javascript">
        window.onload = function () {
            alert("@TempData["message"]");
            var url = "@TempData["RedirectURl"]";
            window.location.href = url;
        };
    </script>
}
<@* /form> *@
<script type="text/javascript">
$("#userId").click(function () {
    var selectedIds = $("#item :checkbox:checked").val()
    $("#myModal .close").click();
    $("#WindowsUserName").val(selectedIds);
});
function changeUserType() {
    var selectedUserType = $("#UserTypeId option:selected").text();
    if (selectedUserType == "clintha") {
        $("#windowsUserName").show();
        $("#UserType").val("clintha");
    }
    else {
        $("#windowsUserName").hide();
        $("#UserType").val('');
    }
}



</script>

<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Activity Added Successfully" xml:space="preserve">
    <value>Activity Added Successfully</value>
  </data>
  <data name="Activity Deleted Successfully" xml:space="preserve">
    <value>Activity Deleted Successfully</value>
  </data>
  <data name="Activity Updated Successfully" xml:space="preserve">
    <value>Activity Updated Successfully</value>
  </data>
  <data name="ActivityDetails Added Successfully" xml:space="preserve">
    <value>ActivityDetails Added Successfully</value>
  </data>
  <data name="ActivityDetails Deleted Successfully" xml:space="preserve">
    <value>ActivityDetails Deleted Successfully</value>
  </data>
  <data name="Configuration Added Successfully" xml:space="preserve">
    <value>Configuration Added Successfully</value>
  </data>
  <data name="Department Added Successfully" xml:space="preserve">
    <value>Department Added Successfully</value>
  </data>
  <data name="Department Deleted Successfully" xml:space="preserve">
    <value>Department Deleted Successfully</value>
  </data>
  <data name="Department Updated Successfully" xml:space="preserve">
    <value>Department Updated Successfully</value>
  </data>
  <data name="Document Deleted Successfully" xml:space="preserve">
    <value>Document Deleted Successfully</value>
  </data>
  <data name="Group Added Successfully" xml:space="preserve">
    <value>Group Added Successfully !!</value>
  </data>
  <data name="Group Deleted Successfully" xml:space="preserve">
    <value>Group Deleted Successfully !!</value>
  </data>
  <data name="Group Updated Successfully" xml:space="preserve">
    <value>Group Updated Successfully !!</value>
  </data>
  <data name="Instrument Added Successfully" xml:space="preserve">
    <value>Instrument Added Successfully</value>
  </data>
  <data name="Instrument Deleted Successfully" xml:space="preserve">
    <value>Instrument Deleted Successfully</value>
  </data>
  <data name="Instrument Updated Successfully" xml:space="preserve">
    <value>Instrument Updated Successfully</value>
  </data>
  <data name="InstrumentActivity Added Successfully" xml:space="preserve">
    <value>InstrumentActivity Added Successfully</value>
  </data>
  <data name="InstrumentActivity Deleted Successfully" xml:space="preserve">
    <value>InstrumentActivity Deleted Successfully</value>
  </data>
  <data name="InstrumentActivity Updated Successfully" xml:space="preserve">
    <value>InstrumentActivity Updated Successfully</value>
  </data>
  <data name="InstrumentId Added Successfully" xml:space="preserve">
    <value>InstrumentId Added Successfully</value>
  </data>
  <data name="InstrumentId Deleted Successfully" xml:space="preserve">
    <value>InstrumentId Deleted Successfully</value>
  </data>
  <data name="InstrumentId Updated Successfully" xml:space="preserve">
    <value>InstrumentId Updated Successfully</value>
  </data>
  <data name="Location Added Successfully" xml:space="preserve">
    <value>Location Added Successfully</value>
  </data>
  <data name="Location Deleted Successfully" xml:space="preserve">
    <value>Location Deleted Successfully</value>
  </data>
  <data name="Location Updated Successfully" xml:space="preserve">
    <value>Location Updated Successfully</value>
  </data>
  <data name="Please enter file types that you want to allow user to upload" xml:space="preserve">
    <value>Please enter file types that you want to allow user to upload !!!</value>
  </data>
  <data name="Requirement Added Successfully" xml:space="preserve">
    <value>Requirement Added Successfully</value>
  </data>
  <data name="Requirement Deleted Successfully" xml:space="preserve">
    <value>Requirement Deleted Successfully</value>
  </data>
  <data name="Requirement Updated Successfully" xml:space="preserve">
    <value>Requirement Updated Successfully</value>
  </data>
  <data name="Role Added Successfully" xml:space="preserve">
    <value>Role Added Successfully</value>
  </data>
  <data name="Role Deleted Successfully" xml:space="preserve">
    <value>Role Deleted Successfully !!</value>
  </data>
  <data name="Role Updated Successfully" xml:space="preserve">
    <value>Role Updated Successfully !!</value>
  </data>
  <data name="Something went wrong.Please contact Admin with AuditId:-" xml:space="preserve">
    <value>Something went wrong.Please contact Admin with AuditId:-</value>
  </data>
  <data name="Team Added Successfully" xml:space="preserve">
    <value>Team Added Successfully</value>
  </data>
  <data name="Team Deleted Successfully" xml:space="preserve">
    <value>Team Deleted Successfully</value>
  </data>
  <data name="Team Updated Successfully" xml:space="preserve">
    <value>Team Updated Successfully</value>
  </data>
  <data name="User Deleted Successfully" xml:space="preserve">
    <value>User Deleted Successfully</value>
  </data>
  <data name="User Updated Successfully" xml:space="preserve">
    <value>User Updated Successfully</value>
  </data>
</root>